version: '3.8'

services:
  db:
    image: mysql:8.1
    container_name: nombre_api_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-nombre_api}
      MYSQL_USER: ${MYSQL_USER:-nombre}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-secret}
      MYSQL_TCP_PORT: ${DB_PORT:-3306}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:latest
    container_name: nombre_api_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nombre_api_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    depends_on:
      - db

  web:
    image: nginx:1.25-alpine
    container_name: nombre_api_web
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www/html:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app

volumes:
  db_data:
    name: nombre_api_db_data
